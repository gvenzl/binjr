trigger:
  branches:
    include:
      - master
      - '*-dev'
      - '*-ci_test'
  tags:
    include:
      - v*

name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  system.debug: false
  isTag: 'false'
  isSnapshot: 'false'

stages:
  - stage: build
    jobs:
      # Linux app bundle job
      - template: build-job.yml
        parameters:
          name: app_bundle_linux
          platform: linux
          jdkDownloadUrl: 'https://cdn.azul.com/zulu/bin/zulu14.28.21-ca-jdk14.0.1-linux_x64.tar.gz'
          jdkFile:  $(Agent.TempDirectory)/jdk-latest-linux_x64.tar.gz
          pool:
            vmImage: 'ubuntu-16.04'

      # MacOS app bundle job
      - template: build-job.yml
        parameters:
          name: app_bundle_mac
          platform: mac
          jdkDownloadUrl: 'https://cdn.azul.com/zulu/bin/zulu14.28.21-ca-jdk14.0.1-macosx_x64.tar.gz'
          jdkFile: $(Agent.TempDirectory)/jdk-latest-macosx_x64.tar.gz
          pool:
            vmImage: 'macOS-10.14'

      # Windows app bundle job
      - template: build-job.yml
        parameters:
          name: app_bundle_windows
          platform: win
          jdkDownloadUrl: 'https://cdn.azul.com/zulu/bin/zulu14.28.21-ca-jdk14.0.1-win_x64.zip'
          jdkFile: $(Agent.TempDirectory)/jdk-latest-win_x64.zip
          pool:
            vmImage: 'windows-2019'

      # Finalize release
  - stage: deploy_site
    dependsOn: build
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'), not(endsWith(variables['Build.SourceBranch'], '-SNAPSHOT')))
    jobs:
    - job: deploy_site
      pool:
        vmImage: 'ubuntu-18.04'
      steps:
        - task: Gradle@2
          env:
            IS_TAG: 'true'
            REPO_TAG_NAME: $(Build.SourceBranchName)
            GPG_KEY_NAME: $(gpg.keyname)
            GPG_PASSPHRASE: $(gpg.passphrase)
            OSSRH_JIRA_PASSWORD: $(ossrh.password)
            OSSRH_JIRA_USERNAME: $(ossrh.username)
          inputs:
            gradleWrapperFile: 'gradlew'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.11'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: false
            tasks: 'expandMdTemplates'

        - bash: |
            python3 --version
            python3 -m pip --version
            python3 -m pip install --upgrade pip setuptools
            python3 -m pip install mkdocs
            python3 -m pip install mkdocs-material
            git clone https://github.com/binjr/binjr-site build/tmp/binjr-site
            cd  build/tmp/binjr-site
            cp ../expanded/CHANGELOG.md src/docs/download/CHANGELOG.md
            cp ../expanded/latest_release.md src/docs/download/latest_release.md
            cp ../expanded/getting-started.md src/docs/documentation/getting-started.md
            git config credential.helper store
            echo "https://binjr-bot:$GH_ACCESS_TOKEN@github.com" >> "$HOME/.git-credentials"
            git config user.email "binjr.bot@free.fr"
            git config user.name "binjr-bot"
            wget https://api.github.com/repos/binjr/binjr/releases/latest -O src/docs/repos/binjr/binjr/releases/latest
            git commit -am "Release  $BUILD_SOURCEBRANCHNAME"
            git push
            cd src
            python3 -m mkdocs gh-deploy
          env:
            GH_ACCESS_TOKEN: $(gh.access.token)

  - stage: maven_publish
    dependsOn: build
    jobs:
    # Publish to Maven repo
    - job: maven_publish
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
        - script: |
            echo '##vso[task.setvariable variable=isTag;]true'
          condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        - task: Gradle@2
          env:
            IS_TAG: $(isTag)
            REPO_TAG_NAME: $(Build.SourceBranchName)
            BINJR_BUILD_NUMBER: $(Build.BuildNumber)
            GPG_KEY_NAME: $(gpg.keyname)
            GPG_PASSPHRASE: $(gpg.passphrase)
            OSSRH_JIRA_PASSWORD: $(ossrh.password)
            OSSRH_JIRA_USERNAME: $(ossrh.username)
          inputs:
            gradleWrapperFile: 'gradlew'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.11'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: false
            options: '-Dorg.gradle.internal.publish.checksums.insecure=true'
            tasks: 'publishArtifacts'